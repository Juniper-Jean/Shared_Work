if(l>limit){
x2 <- s[1]+l*cos(d)
y2 <- s[2]+l*sin(d)
ep <- c(x2, y2)
lines(c(s[1],x2),c(s[2],y2), type='l')
f(ep,(d+pi/4*d2),(l*0.38),d2) # Why dir here?
f(ep,(d),(l*0.87),d2)
}
}
plot(NULL, xlim = c(-20,20), ylim = c(-20,20), xlab = 'x', ylab = 'y')
f(start_position, direction, length, dir)
1e4
?seq
seq(0, 30, 1)
T
k = 8.617*10^-5
Tdata = seq(0, 30, 1)
y = exp(-E/(k*Tdata))
y = exp(-0.65/(k*Tdata))
y
plot(Tdata, y)
exp(-0.65/(k*Tdata))
exp(-0.65/(k*1))
exp(-0.65/(k*2))
exp(-0.65/(k*3))
k
k*3
0.65/0.0002
exp(3250)
exp(-3250)
exp(-1)
exp(-0.65/(k*4))
exp(-0.65/(k*5))
exp(-0.65/(k*6))
exp(-0.65/(k*7))
exp(-0.65/(k*8))
exp(-0.65/(k*9))
exp(-0.65/(k*10))
exp(-0.65/(k*11))
exp(-0.65/(k*12))
exp(-0.65/(k*13))
exp(-0.65/(k*14))
exp(-0.65/(k*15))
exp(-0.65/(k*16))
exp(-0.65/(k*17))
exp(-0.65/(k*18))
exp(-0.65/(k*19))
exp(-0.65/(k*20))
exp(-0.65/(k*21))
exp(-0.65/(k*22))
exp(-0.65/(k*23))
exp(-0.65/(k*24))
exp(-0.65/(k*25))
exp(-0.65/(k*Tdata))
exp(-0.65/(k*30))
exp(-0.65/(k*29))
lines(Tdata, y)
exp(-0.65/(k*0))
exp(-0.65/(k*1))
0/0
k = 8.617*10^-5
Tdata = seq(0, 30, + 1)
TK = seq(0, 30, 1) + 273.15
y = exp(-0.65/(k*TK))
plot(Tdata, y)
plot(TK, y)
k = 8.617*10^-5
Tdata = seq(0, 30, + 1)
TK = seq(0, 30, 1) + 273.15
y = exp(-0.65/(k*TK))
plot(TK, y)
k = 8.617*10^-5
TK = seq(0, 30, 1) + 273.15 # temps in K
y = exp(-0.65/(k*TK))
plot(TK, y)
y = exp(-0.65/(k*TK))
y
exp(-0.65/(k*TK))
exp(-0.65/(k*1))
exp(-0.65/(k*(273.15 + 0)))
exp(-0.65/(k*(273.15 + 1)))
exp(-0.65/(k*(273.15 + 1))) * exp(-0.65/(k*(273.15 + 1)))
exp(-0.65/(k*(273.15 + 1))) * exp(-0.65/(k*(273.15 + 1))) / exp(-0.65/(k*(273.15 + 1)))
0.0000000001
0.00000000000112
0.000000000000112
0.000000000000112
0.00000000000112
0.000000000001
install.packages(c("assertthat", "broom", "chron", "DBI", "jsonlite", "maptools", "pbkrtest", "psych", "pwr", "Rcpp", "RcppArmadillo", "RcppEigen", "SparseM", "spdep", "stringr", "tibble", "unmarked", "viridis", "XML"))
?seq
seq(5)
seq(1:5)
1:7
initialise_max(7)
source('~/Documents/Project/Code/Edited_HPCCoursework/HPCCoursework_NeutralTheorySims_Forwards.R', echo=TRUE)
initialise_max(7)
initial = initialise_max(7)
species_richness(initial)
c(species_richness(initial))
species_abundance(c(1,5,3,6,5,6,1,1))
octaves(c(100,64,63,5,4,3,2,2,1,1,1,1))
octaves <- function(abundances){
browser()
bins <- floor(log2(abundances)) + 1
max_bin <- max(bins)
tally <- seq(0, 0, length.out = max_bin)
for (i in bins){
tally[i] <- tally[i] + 1
}
return(tally)
}
octaves(c(100,64,63,5,4,3,2,2,1,1,1,1))
bins
log2(abundances)
floor(log2(abundances))
bins
abundances
octaves(c(100,64,63,5,4,3,2,2,1,1,1,1))
tabulate(bins)
bins
seq(0, 0, length.out = max_bin)
?seq
seq(0, length.out = max_bin)
rep(0, 5)
?tabulate
max(1,5)
as.integer('hello')
as.integer(hello)
tabulate(bins)
octaves(c(100,64,63,5,4,3,2,2,1,1,1,1))
rnorm(1)
rnorm(1)
rnorm(1)
rnorm(1)
rnorm(1)
rnorm(1)
rnorm(1)
rnorm(1)
rnorm(1)
rnorm(1)
rnorm(1)
rnorm(1, mean = 0, sd = 1)
rnorm(1, mean = 0, sd = 1)
rnorm(1, mean = 0, sd = 1)
rnorm(1, mean = 0, sd = 1)
rnorm(1, mean = 0, sd = 1)
rnorm(1, mean = 0, sd = 1)
rnorm(1, mean = 0, sd = 1)
rnorm(1, mean = 0, sd = 1)
rnorm(1, mean = 0, sd = 1)
rnorm(1, mean = 0, sd = 1)
rnorm(1, mean = 0, sd = 1)
rnorm(1, mean = 5, sd = 1)
rnorm(1, mean = 5, sd = 1)
rnorm(1, mean = 5, sd = 1)
rnorm(1, mean = 5, sd = 1)
rnorm(1, mean = 5, sd = 1)
rnorm(1, mean = 5, sd = 1)
rnorm(1, mean = 5, sd = 1)
rnorm(1, mean = 5, sd = 1)
rnorm(1, mean = 5, sd = 1)
array(1:24, c(1,2,3))
?runif
T = [273.15:310.15]
0:4
0.5:4.5
0.15:4.15
273.15:310.15
k = 8.61733Ã—10^-5
B = (m^-0.25)*exp(-0.65/(k/T))
k = 8.61733Ã—10^-5
m = 0.1
T = 273.15:310.15
k = 8.61733*(10^-5)
m = 0.1
T = 273.15:310.15
B = (m^-0.25)*exp(-0.65/(k/T))
plot(B, T)
plot(T, B)
plot(T, log(B))
plot(T, log(B))
B
B = log((m^-0.25)*exp(-0.65/(k/T)))
B
B = exp(-0.65/(k/T))
B
B = log((m^-0.25)*exp(-0.65/(k/log(T))/)
plot(T, log(B))
exp(-0.65/(k/log(T))/)
log(T)
T = 273.15:310.15
y = 1*(0.1^-0.25)*exp(-0.65/(8.61733Ã—10^-5*T))
y = 1*(0.1^-0.25)*exp(-0.65/((8.61733*10^-5)*T))
y
T = 273.15:310.15
y = 1*(0.1^-0.25)*exp(-0.65/((8.61733*10^-5)*T))
plot(T, y)
y = 1*(0.1^-0.25)*exp(-0.65/(8.61733*10^-5*T))
y
?plot
plot(T, y, type='l')
plot(T, y, type='l')
y = 0.1*(0.1^-0.25)*exp(-0.65/((8.61733*10^-5)*T))
line(T, y, col='red')
?line
?lines
lines(T, y, col='red')
y = 0.1*(10^-0.25)*exp(-0.65/((8.61733*10^-5)*T))
lines(T, y, col='red')
*
y = 1*(10^-0.25)*exp(-0.65/((8.61733*10^-5)*T))
lines(T, y, col='red')
y = 0.1*(100^-0.25)*exp(-0.65/((8.61733*10^-5)*T))
lines(T, y, col='blue')
y = 1*(100^-0.25)*exp(-0.65/((8.61733*10^-5)*T))
lines(T, y, col='blue')
y = 1*(10^-0.25)*exp(-0.65/((8.61733*10^-5)*T))
lines(T, y, col='blue')
10^-0.25
100^-0.25
y = 1*(0.1^-0.25)*exp(-0.65/((8.61733*10^-5)*T))
lines(T, y, col='red')
y = 1*(0.1^-0.25)*exp(-0.25/((8.61733*10^-5)*T))
lines(T, y, col='green')
plot(T, y, type='l')
y = 1*(0.1^-0.25)*exp(-0.15/((8.61733*10^-5)*T))
lines(T, y, col='green')
plot(T, y, type='l')
y = 1*(0.1^-0.25)*exp(0)
plot(T, y, type='l')
T = 273.15:310.15
y = 1*(0.1^-0.25)*exp(0)
plot(T, y, type='l')
y
plot(y)
y = 1*(0.1^-0.25)*exp(T)
plot(T, y, type='l')
y = 1*(0.1^-0.25)*exp(2*T)
lines(T, y, col='green')
lines(T, y, col='green')
plot(T, y, type='l')
y = 1*(0.1^-0.25)*exp(3*T)
plot(T, y, type='l')
y
y = 1*(0.1^-0.25)*exp(0.1*T)
plot(T, y, type='l')
y = 1*(0.1^-0.25)*exp(0.2*T)
lines(T, y, col='green')
plot(T, y, type='l')
y = 1*(0.1^-0.25)*exp(2*T)
plot(T, y, type='l')
y = 1*(0.1^-0.25)*exp(-2*T)
plot(T, y, type='l')
y = 1*(0.1^-0.25)*exp(-0.2*T)
plot(T, y, type='l')
y = 1*(0.1^-0.25)*exp(0.2/T)
plot(T, y, type='l')
T = 273.15:310.15
y = exp(T)
plot(T, y, type='l')
y = exp(-T)
plot(T, y, type='l')
y = -exp(T)
plot(T, y, type='l')
y = -exp(-T)
plot(T, y, type='l')
y = -exp(T)
plot(T, y, type='l')
y = -exp(1:5)
y
plot(1:5, y, type='l')
273.15:310.15
x = 0.01:10
x
x = 1:50
y = exp(x)
plot(x,y)
x = 1:50
y = exp(x)
plot(x,y, type='l')
y = -exp(x)
plot(x,y, type='l')
y = exp(-x)
plot(x,y, type='l')
y = -exp(-x)
plot(x,y, type='l')
y = exp(x)
plot(x,y, type='l')
y = 2exp(x)
plot(x,y, type='l')
y = 2*exp(x)
plot(x,y, type='l')
plot(x,y, type='l', ylim = (0,1))
plot(x,y, type='l', ylim = (0,1))
?plot
plot(x,y, ylim = (0,10))
plot(x,y, type='l', ylim = (0,1))
plot(x,y, type='l', ylim = (1))
plot(x,y, type='l', ylim = 0.001)
plot(x,y,xlim=(0,100))
plot(x,y,xlim=(100))
plot(x,y, type='l', ylim = c(0,1))
plot(x,y, type='l', ylim = c(0,0.1))
plot(x,y, type='l', ylim = c(0,0.01))
plot(x,y, type='l', ylim = c(0,0.001))
plot(x,y, type='l', ylim = c(0,0.0001))
plot(x,y, type='l', ylim = c(0,0.000001))
x = 1:50
y = 2*exp(x)
plot(x,y, type='l', ylim = c(0,0.000001))
plot(x,y, type='l')
x = 1:1000
y = 2*exp(x)
plot(x,y, type='l', ylim = c(0,1))
x = 1:10000
y = 2*exp(x)
plot(x,y, type='l', ylim = c(0,1))
x = 1:100000
y = 2*exp(x)
plot(x,y, type='l', ylim = c(0,1))
x = 1:100000000000000000
y = 2*exp(x)
plot(x,y, type='l', ylim = c(0,1))
x = 10000000000000:100000000000000000
y = 2*exp(x)
plot(x,y, type='l', ylim = c(0,1))
x = 0.00001:0.00002
x
x = 0.00001:0.00005
x
x = 0.00001:0.0001
x
x = 0.1:0.4
x
c(0.1:0.4)
x = -3:3
x
x = -3:3
y = exp(x)
plot(x,y)
x = 1:50
y = 2*exp(x)
plot(x,y, type='l')
x = -3:3
y = exp(x)
plot(x,y)
x = -3:3
y = exp(x)
plot(x,y, type = 'l')
x/10
x/100
seq(-3,3,by = 0.1)
seq(-3,3,0.1)
x = seq(-3,3,0.1)
y = exp(x)
plot(x,y, type = 'l')
y = 2exp(x)
y = 2*exp(x)
plot(x,y, type = 'l')
y = exp(x)
plot(x,y, type = 'l')
lines(y)
y
x = seq(-3,3,0.1)
y = 1*exp(x)
plot(x,y, type = 'l')
y = 2*exp(x)
lines(x,y)
y = 1*exp(2*x)
lines(x,y)
y = 1*exp(0.5*x)
lines(x,y)
y = 0.5*exp(1*x)
lines(x,y)
y = 1*exp(1*x) + 5
lines(x,y)
x = seq(-3,3,0.1)
x = seq(-3,3,0.1)
y = 1*(0.1^-0.25)*exp(1*x)
plot(x,y, type = 'l')
y = 1*(10^-0.25)*exp(1*x)
lines(x,y)
y = 1*(10^-0.25)*exp(0.5*x)
lines(x,y)
x = seq(-3,3,0.1)
y = 1*(10^-0.25)*exp(1*1/x)
plot(x,y, type = 'l')
y = 1*(10^-0.25)*exp(-1*1/x)
lines(x,y)
plot(x,y, type = 'l')
300*k
310*k
320*k
y = 1*(10^-0.25)*exp(-0.65/0.02)
plot(x,y, type = 'l')
x = seq(-3,3,0.1)
y = 1*(10^-0.25)*exp(-0.65/0.02)
plot(x,y, type = 'l')
273*k
x = seq(-0.02,0.02,0.001)
x
x = seq(-0.02,0.02,0.001)
y = 1*(10^-0.25)*exp(-0.65/x)
plot(x,y, type = 'l')
x = seq(0.02,0.03,0.001)
y = 1*(10^-0.25)*exp(-0.65/x)
lines(x,y)
plot(x,y, type = 'l')
x = seq(0.02,0.03,0.0001)
y = 1*(10^-0.25)*exp(-0.65/x)
plot(x,y, type = 'l')
y = 1*(0.1^-0.25)*exp(-0.65/x)
lines(x,y)
y = 0.5*(0.1^-0.25)*exp(-0.65/x)
lines(x,y)
y = 2*(0.1^-0.25)*exp(-0.65/x)
lines(x,y)
x = seq(0.02,0.03,0.0001)
y = 1*(0.1^-0.25)*exp(-0.65/x)
plot(x,y, type = 'l')
plot(x,y, type = 'l')
y = 1*(10^-0.25)*exp(-0.65/x)
lines(x,y, col = 'blue')
y = 1*(0.1^-0.25)*exp(-0.65/x)
lines(x,y, col = 'blue')
y = 0.1*(0.1^-0.25)*exp(-0.65/x)
lines(x,y, col = 'green')
y = 0.1*(10^-0.25)*exp(-0.65/x)
lines(x,y, col = 'green')
exp(-0.65/x)
0.1*(10^-0.25)*exp(-0.65/x)
rm(list = ls())
source('~/Documents/Project_Drafts/Code/Edited_HPCCoursework/NeutralTheorySims_Forwards.R', echo=TRUE)
neutral_time_series(initial = initialise_max(7), duration = 20, interval = 2)
neutral_time_series(initial = initialise_min(500), duration = 1000, interval = 10)
question_10 <- function(){
max <- neutral_time_series_speciation(initialise_max(100), 10000, 10, v = 0.1)
# Initial state given by 'initialise_max'.
min <- neutral_time_series_speciation(initialise_min(100), 10000, 10, v = 0.1)
# Initial state given by 'initialise_min'.
xd <- seq(0, 10000, by=10)
yd_max <- max[[1]]
yd_min <- min[[1]]
plot(xd, yd_max,
type = 'l', col = 'blue',
xlab = 'Time step', ylab = 'Species richness', cex.axis = 1.5, cex.lab = 2,
ylim = c(0,100))
lines(xd, yd_min, col='red')
legend('topright', # Legend location
c('Initial state of max diversity (each individual is a unique species)',
'Initial state of min diversity (100 individuals of the same species)'), # character vector of labels
cex = 1.5,
col = c('blue', 'red'), # colour of lines
lty = c(1,1)) # line types
}
source('~/Documents/Project_Drafts/Code/Edited_HPCCoursework/NeutralTheorySims_Forwards.R', echo=TRUE)
neutral_time_series_speciation(initial = initialise_max(7), duration = 20, interval = 2, v = 0.2)
neutral_time_series_speciation(initial = initialise_min(500), duration = 1000, interval = 2, v = 0.2)
neutral_time_series_speciation(initial = initialise_min(500), duration = 10000, interval = 2, v = 0.2)
neutral_time_series_speciation(initial = initialise_min(500), duration = 25000, interval = 2, v = 0.2)
neutral_time_series_speciation(initial = initialise_min(500), duration = 50000, interval = 2, v = 0.2)
neutral_time_series_speciation(initial = initialise_min(500), duration = 100000, interval = 2, v = 0.2)
state = neutral_time_series_speciation(initial = state, duration = 100000, interval = 2, v = 0.2)
state = neutral_time_series_speciation(initial = initialise_min(500), duration = 100000, interval = 2, v = 0.2)
state = neutral_time_series_speciation(initial = initialise_min(500), duration = 100000, interval = 2, v = 0.2)
state = neutral_time_series_speciation(initial = initialise_min(500), duration = 100000, interval = 2, v = 0.2)
state = neutral_time_series_speciation(initial = initialise_min(500), duration = 100000, interval = 2, v = 0.2)
state
state = neutral_time_series_speciation(initial = state, duration = 100000, interval = 2, v = 0.2)
state = neutral_time_series_speciation(initial = state[[2]], duration = 100000, interval = 2, v = 0.2)
state[[2]]
state
state = neutral_time_series_speciation(initial = state[[2]], duration = 100000, interval = 2, v = 0.2)
state = neutral_time_series_speciation(initial = state[[2]], duration = 100000, interval = 2, v = 0.2)
state[[1]]
View(neutral_step_speciation)
View(choose_two)
View(neutral_step_speciation)
?qnorm()
qnorm(0.975)
qnorm(0.5)
library(RcppCNPy)
install.packages('Rcpp CNPy')
install.packages('Rcpp CNPy')
plot(rnorm(1000))
dnorm(rnorm(1000))
plot(rnorm(1000), dnorm(rnorm(1000)))
x <- seq(-4, 4, length=100)
plot(x, dnorm(x))
plot(x, dnorm(x), type='l')
plot(x, dnorm(x)*5, type='l')
lines(x, dnorm(x)*5, type='l')
lines(x, dnorm(x)*10, type='l')
plot(x, dnorm(x)*10, type='l')
lines(x, dnorm(x)*5, type='l')
lines(x, dnorm(x)*3, type='l')
lines(x, dnorm(x)*2, type='l')
lines(x, dnorm(x), type='l')
installed.packages()
source('~/.active-rstudio-document', echo=TRUE)
install.packages("cowplot")
library(cowplot)
library(RcppCNPy)
library(RcppCNPy)
library(RcppCNPy)
install.packages("cowplot")
install.packages("RcppCNPy",dependencies = TRUE)
library(RcppCNPy)
source('~/Documents/Project_Drafts/Code/NeutralMetabolicOff/HeatMap.R', echo=TRUE)
setwd('Documents/Project_Drafts/Code/NeutralMetabolicOff/')
source('~/Documents/Project_Drafts/Code/NeutralMetabolicOff/HeatMap.R', echo=TRUE)
